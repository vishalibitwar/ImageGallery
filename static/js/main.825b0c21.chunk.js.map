{"version":3,"sources":["components/ImageCard.js","components/ImageSearch.js","components/ScrollToTop.js","App.js","index.js"],"names":["ImageCard","image","className","src","webformatURL","alt","ImageSearch","searchText","useState","text","setText","onSubmit","e","preventDefault","onChange","target","value","type","placeholder","ScrollToTop","show","setShow","window","addEventListener","document","body","scrollTop","documentElement","title","onClick","scrollTo","App","images","setImages","isLoading","setIsLoading","term","setTerm","setScrollTop","page","setPage","useEffect","fetch","process","then","res","json","data","prev","hits","catch","err","console","log","onScroll","scrollHeight","clientHeight","removeEventListener","onscroll","length","map","index","key","ReactDOM","render","getElementById"],"mappings":"mLAQeA,EAPG,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACnB,OACE,yBAAKC,UAAU,8CACb,yBAAKC,IAAKF,EAAMG,aAAcF,UAAU,gBAAgBG,IAAI,YCoBnDC,EAtBK,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAAiB,EACdC,mBAAS,IADK,mBAC/BC,EAD+B,KACzBC,EADyB,KAQtC,OACE,yBAAKR,UAAU,uFACb,0BAAMS,SAPO,SAACC,GAChBA,EAAEC,iBACFN,EAAWE,IAKiBP,UAAU,mBAClC,yBAAKA,UAAU,yCACf,2BAAOY,SAAU,SAAAF,GAAC,OAAIF,EAAQE,EAAEG,OAAOC,QAAQd,UAAU,kHAAkHe,KAAK,OAAOC,YAAY,6BACnM,4BAAQhB,UAAU,2JAA2Je,KAAK,UAAlL,cCaOE,EA1BK,WAAO,IAAD,EAEAX,oBAAS,GAFT,mBAEjBY,EAFiB,KAEXC,EAFW,KAGxBC,OAAOC,iBAAiB,UAAU,WAC5BC,SAASC,KAAKC,UAAY,IAAMF,SAASG,gBAAgBD,UAAY,GACvEL,GAAQ,GAERA,GAAQ,MAMZ,OAEE,kBAAC,WAAD,KAEID,GAAQ,yBAAKlB,UAAU,sCACrB,0BAAM0B,MAAM,cAAcC,QARhB,WAChBP,OAAOQ,SAAS,EAAG,IAOiC5B,UAAU,4FAAxD,QC6DK6B,EA5EH,WAAO,IAAD,EACYvB,mBAAS,IADrB,mBACTwB,EADS,KACDC,EADC,OAEkBzB,oBAAS,GAF3B,mBAET0B,EAFS,KAEEC,EAFF,OAGQ3B,mBAAS,IAHjB,mBAGT4B,EAHS,KAGHC,EAHG,OAIkB7B,mBAAS,GAJ3B,mBAITkB,EAJS,KAIEY,EAJF,OAKQ9B,mBAAS,GALjB,mBAKT+B,EALS,KAKHC,EALG,KAqDhB,OArCAC,qBAAU,WACRC,MAAM,gCAAD,OAC6BC,sCAD7B,cACwEP,EADxE,yDAC6HG,IAE/HK,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLZ,GAAa,GACbF,GAAU,SAAAe,GAAI,4BAAQA,GAAR,YAAiBD,EAAKE,UACpCT,EAAQD,EAAO,MAEhBW,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,MAE9B,IAAMG,EAAW,SAAA1C,GAAM,IAAD,EAKhBY,SAASG,gBAHXD,EAFkB,EAElBA,UACA6B,EAHkB,EAGlBA,aAGE7B,EANgB,EAIlB8B,cAE8BD,EAAe,GAC7CjB,EAAa1B,EAAEG,OAAOY,gBAAgBD,YAO1C,OAJAF,SAASC,KAAKF,iBAAiB,YAAa+B,GAC5C9B,SAASC,KAAKgC,oBAAqB,YAAaC,UAEhDpC,OAAOC,iBAAiB,SAAU+B,GAC3B,kBAAMhC,OAAOmC,oBAAoB,SAAUH,MAGjD,CAAClB,EAAKV,IASP,yBAAKxB,UAAU,sDACb,kBAAC,EAAD,CAAaK,WA/CE,SAACE,GAClBwB,EAAU,IACVE,GAAa,GACbE,EAAQ5B,GACR+B,EAAQ,GACRF,EAAa,OA6CRJ,GAAaF,EAAO2B,OAAS,GAAK,wBAAIzD,UAAU,2CAAd,iBAGpCgC,EACC,wBAAIhC,UAAU,2CAAd,cAEE,yBAAKA,UAAU,gFACZ8B,EAAO4B,KAAI,SAAC3D,EAAO4D,GAAR,OACV,kBAAC,EAAD,CAAWC,IAAKD,EAAO5D,MAAOA,QAKtC,kBAAC,EAAD,Q,sBCrEN8D,IAASC,OAAO,kBAAC,EAAD,MAASxC,SAASyC,eAAe,U","file":"static/js/main.825b0c21.chunk.js","sourcesContent":["import React from 'react';\r\nconst ImageCard = ({ image }) => {\r\n  return (\r\n    <div className='max-w-sm rounded overflow-hidden shadow-lg'>\r\n      <img src={image.webformatURL} className='w-full h-full' alt='Image' />\r\n    </div>\r\n  );\r\n};\r\nexport default ImageCard;\r\n\r\n","import React, { useState } from 'react';\r\n\r\nconst ImageSearch = ({ searchText }) => {\r\n  const [text, setText] = useState('');\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    searchText(text);\r\n  }\r\n\r\n  return (\r\n    <div className=' w-11/12 bg-white shadow-md px-2 rounded overflow-hidden my-10 mx-auto sm:max-w-sm '>\r\n      <form onSubmit={onSubmit} className=\"w-full max-w-sm\">\r\n        <div className=\"flex items-center justify-center py-2\">\r\n        <input onChange={e => setText(e.target.value)} className=\"appearance-none bg-transparent border-none w-full text-gray-700 mr-3 py-1 px-2 leading-tight focus:outline-none\" type=\"text\" placeholder=\"Search Image Category...\" />\r\n        <button className=\"flex-shrink-0 bg-gray-600 hover:bg-gray-700 mx-2 border-gray-600 hover:border-gray-700 text-sm border-4 text-white py-1 px-2 rounded focus:outline-none \" type=\"submit\">\r\n      Search\r\n      </button>\r\n      </div>\r\n      </form>\r\n\t\t</div>\r\n  )\r\n}\r\n\r\nexport default ImageSearch;","import React, { useState, Fragment } from 'react';\r\n\r\nconst ScrollToTop = () => {\r\n\r\n  const [show, setShow] = useState(false);\r\n  window.addEventListener('scroll', () => {\r\n    if (document.body.scrollTop > 60 || document.documentElement.scrollTop > 60)\r\n      setShow(true)\r\n    else\r\n      setShow(false)\r\n  })\r\n\r\n  const ScrollTop = () => {\r\n    window.scrollTo(0, 0);\r\n  }\r\n  return (\r\n\r\n    <Fragment>\r\n      {\r\n        show && <div className=\" fixed m-2 right-0 bottom-0 lg:m-4\">\r\n          <span title=\"Back to Top\" onClick={ScrollTop} className=\"bg-gray-700  hover:bg-gray-800 cursor-pointer px-1 font-bold rounded text-2xl text-white\">^</span>\r\n        </div>\r\n\r\n      }\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default ScrollToTop;\r\n","import React, { useState, useEffect } from 'react';\nimport ImageCard from './components/ImageCard';\nimport ImageSearch from './components/ImageSearch';\nimport ScrollToTop from './components/ScrollToTop';\n\nconst App = () => {\n  const [images, setImages] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [term, setTerm] = useState('');\n  const [scrollTop, setScrollTop] = useState(0);\n  const [page, setPage] = useState(1);\n\n\n  const searchText = (text) => {\n    setImages([]);\n    setIsLoading(true);\n    setTerm(text);\n    setPage(1);\n    setScrollTop(4);\n  }\n\n  useEffect(() => {\n    fetch(\n      `https://pixabay.com/api/?key=${process.env.REACT_APP_PIXABAY_API_KEY}&q=${term}&image_type=photo&pretty=true&per_page=9&page=${page}`\n    )\n      .then((res) => res.json())\n      .then((data) => {\n        setIsLoading(false);\n        setImages(prev => [...prev, ...data.hits]);\n        setPage(page + 1);\n      })\n      .catch((err) => console.log(err));\n\n    const onScroll = e => {\n      const {\n        scrollTop,\n        scrollHeight,\n        clientHeight\n      } = document.documentElement;\n      if (scrollTop + clientHeight >= scrollHeight - 1)\n        setScrollTop(e.target.documentElement.scrollTop);\n    };\n\n    document.body.addEventListener('touchmove', onScroll);\n    document.body.removeEventListener( 'touchmove', onscroll );\n\n    window.addEventListener(\"scroll\", onScroll);\n    return () => window.removeEventListener(\"scroll\", onScroll);\n\n\n  }, [term,scrollTop]);\n\n\n\n\n\n\n\n  return (\n    <div className='container w-11/12  mb-6 mx-auto sm:max-w-screen-xl'>\n      <ImageSearch searchText={searchText} />\n\n\n      { !isLoading && images.length < 1 && <h1 className=\"text-gray-700  text-xl text-center mt-6\">\n        Nothing Found\n      </h1>}\n      {isLoading ? (\n        <h1 className='text-xl text-center text-gray-600 mt-32'>Loading...</h1>\n      ) : (\n          <div className='grid justify-center grid-col-1 gap-4 md:grid-cols-2 lg:grid-cols-3  sm:gap-3'>\n            {images.map((image, index) => (\n              <ImageCard key={index} image={image} />\n            ))}\n          </div>\n        )}\n\n      <ScrollToTop />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport App from './App'\nimport ReactDOM from 'react-dom';\nimport './assets/main.css';\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}